{"version":3,"sources":["Styles.js","calculator/Calculator.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","textAlign","padding","spacing","margin","Header","AppBar","position","Toolbar","Icon","edge","color","aria-label","Box","ml","Typography","variant","Result","props","classes","Grid","container","justify","item","xs","md","Paper","className","elevation","result","Form","autoComplete","mt","sm","TextField","name","label","type","defaultValue","onChange","handler","FormControl","component","FormLabel","RadioGroup","value","operationValue","FormControlLabel","control","Radio","Calculator","React","useState","values","setValues","setResult","useEffect","numberOne","Number","numberTwo","operation","toString","event","target","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAaeA,EAXGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,UAAW,SACXC,QAASL,EAAMM,QAAQ,GACvBC,OAAQP,EAAMM,QAAQ,QCUxBE,EAAS,kBACX,cAACC,EAAA,EAAD,CAAQC,SAAU,SAAlB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAMC,KAAM,QAASC,MAAO,UAAWC,aAAW,OAAlD,SACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,6CAMVC,EAAS,SAACC,GACZ,IAAMC,EAAUxB,IAEhB,OACI,cAACyB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,EAAA,EAAD,CAAOC,UAAWR,EAAQnB,MAAO4B,UAAW,GAA5C,UACI,cAACb,EAAA,EAAD,CAAYC,QAAS,KAArB,qBACA,cAACD,EAAA,EAAD,CAAYC,QAAS,KAArB,SAA4BE,EAAMW,iBAOhDC,EAAO,SAACZ,GACV,IAAMC,EAAUxB,IAEhB,OAAQ,sBAAMoC,aAAc,MAApB,SACJ,cAAClB,EAAA,EAAD,CAAKmB,GAAI,EAAT,SACI,eAACZ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIS,GAAI,EAAvB,SACI,cAACP,EAAA,EAAD,CAAOC,UAAWR,EAAQnB,MAAO4B,UAAW,EAA5C,SACI,cAACM,EAAA,EAAD,CACIC,KAAM,YACNC,MAAO,eACPpB,QAAS,WACTqB,KAAM,SACNC,aAAc,IACdC,SAAUrB,EAAMsB,cAI5B,cAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIS,GAAI,EAAvB,SACI,cAACP,EAAA,EAAD,CAAOC,UAAWR,EAAQnB,MAAO4B,UAAW,EAA5C,SACI,eAACa,EAAA,EAAD,CAAaC,UAAW,WAAxB,UACI,cAACC,EAAA,EAAD,CAAWD,UAAW,SAAtB,uBACA,eAACE,EAAA,EAAD,CAAYhC,aAAY,YAAauB,KAAM,YAAaU,MAAO3B,EAAM4B,eACzDP,SAAUrB,EAAMsB,QAD5B,UAEI,cAACO,EAAA,EAAD,CAAkBF,MAAO,IAAKG,QAAS,cAACC,EAAA,EAAD,IAAUb,MAAM,MACvD,cAACW,EAAA,EAAD,CAAkBF,MAAO,IAAKG,QAAS,cAACC,EAAA,EAAD,IAAUb,MAAM,MACvD,cAACW,EAAA,EAAD,CAAkBF,MAAO,IAAKG,QAAS,cAACC,EAAA,EAAD,IAAUb,MAAM,SACvD,cAACW,EAAA,EAAD,CAAkBF,MAAO,IAAKG,QAAS,cAACC,EAAA,EAAD,IAAUb,MAAO,mBAKxE,cAAChB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIS,GAAI,EAAvB,SACI,cAACP,EAAA,EAAD,CAAOC,UAAWR,EAAQnB,MAAO4B,UAAW,EAA5C,SACI,cAACM,EAAA,EAAD,CAAWC,KAAM,YACNC,MAAO,gBACPpB,QAAS,WACTqB,KAAM,SACNC,aAAc,IACdC,SAAUrB,EAAMsB,sBAmDpCU,EA3CI,WAAO,IAAD,EACOC,IAAMC,SAAS,CAAC,UAAa,IAAK,UAAa,IAAK,UAAa,MADxE,mBACdC,EADc,KACNC,EADM,OAEOH,IAAMC,SAAS,IAFtB,mBAEdvB,EAFc,KAEN0B,EAFM,KAkCrB,OAvBAJ,IAAMK,WAAU,WACZ,IAAMC,EAAYC,OAAOL,EAAOI,WAC1BE,EAAYD,OAAOL,EAAOM,WAEhC,OAAQN,EAAOO,WACX,IAAK,IACDL,GAAWE,EAAYE,GAAWE,YAClC,MACJ,IAAK,IACDN,GAAWE,EAAYE,GAAWE,YAClC,MACJ,IAAK,IACDN,GAAWE,EAAYE,GAAWE,YAClC,MACJ,IAAK,IACDN,GAAWE,EAAYE,GAAWE,YAClC,MACJ,QACIN,EAAU,YAGnB,CAACF,EAAOI,UAAWJ,EAAOM,UAAWN,EAAOO,YAG3C,iCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAMpB,QAhCO,SAACsB,GAAW,IAAD,EACNA,EAAMC,OAArB5B,EADqB,EACrBA,KAAMU,EADe,EACfA,MACbS,GAAU,SAAAU,GAAS,kCAASA,GAAT,kBAAqB7B,EAAOU,QA8BdC,eAAgBO,EAAOO,YACpD,cAAC,EAAD,CAAQ/B,OAAQA,QC3HboC,EAPH,WACR,OACIf,KCARgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.4ed3fe7b.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(2),\r\n        margin: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport default useStyles","import {\r\n    AppBar,\r\n    Box,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Grid,\r\n    Icon,\r\n    Paper,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport DialpadIcon from \"@material-ui/icons/Dialpad\";\r\nimport React from \"react\";\r\nimport useStyles from \"../Styles\";\r\n\r\nconst Header = () => (\r\n    <AppBar position={\"static\"}>\r\n        <Toolbar>\r\n            <Icon edge={\"start\"} color={\"inherit\"} aria-label=\"Home\">\r\n                <DialpadIcon/>\r\n            </Icon>\r\n            <Box ml={3}>\r\n                <Typography variant={\"h6\"}>Simple React Calculator</Typography>\r\n            </Box>\r\n        </Toolbar>\r\n    </AppBar>\r\n)\r\n\r\nconst Result = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={10} md={6}>\r\n                <Paper className={classes.paper} elevation={10}>\r\n                    <Typography variant={\"h4\"}>Result:</Typography>\r\n                    <Typography variant={\"h2\"}>{props.result}</Typography>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Form = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (<form autoComplete={\"off\"}>\r\n        <Box mt={4}>\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper} elevation={4}>\r\n                        <TextField\r\n                            name={\"numberOne\"}\r\n                            label={\"First number\"}\r\n                            variant={\"outlined\"}\r\n                            type={\"number\"}\r\n                            defaultValue={\"0\"}\r\n                            onChange={props.handler}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper} elevation={4}>\r\n                        <FormControl component={\"fieldset\"}>\r\n                            <FormLabel component={\"legend\"}>Operation</FormLabel>\r\n                            <RadioGroup aria-label={\"operation\"} name={\"operation\"} value={props.operationValue}\r\n                                        onChange={props.handler}>\r\n                                <FormControlLabel value={\"+\"} control={<Radio/>} label=\"+\"/>\r\n                                <FormControlLabel value={\"-\"} control={<Radio/>} label=\"-\"/>\r\n                                <FormControlLabel value={\"*\"} control={<Radio/>} label=\"ร\"/>\r\n                                <FormControlLabel value={\"/\"} control={<Radio/>} label={\"รท\"}/>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <Paper className={classes.paper} elevation={4}>\r\n                        <TextField name={\"numberTwo\"}\r\n                                   label={\"Second number\"}\r\n                                   variant={\"outlined\"}\r\n                                   type={\"number\"}\r\n                                   defaultValue={\"0\"}\r\n                                   onChange={props.handler}/>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </form>)\r\n}\r\n\r\nconst Calculator = () => {\r\n    const [values, setValues] = React.useState({'numberOne': '0', 'numberTwo': '0', 'operation': '+'})\r\n    const [result, setResult] = React.useState('')\r\n\r\n    // Update values object when any field is updated\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        setValues(prevState => ({...prevState, [name]: value}))\r\n    }\r\n\r\n    // Watch for change in values and update answer\r\n    React.useEffect(() => {\r\n        const numberOne = Number(values.numberOne)\r\n        const numberTwo = Number(values.numberTwo)\r\n\r\n        switch (values.operation) {\r\n            case \"+\":\r\n                setResult((numberOne + numberTwo).toString())\r\n                break\r\n            case \"-\":\r\n                setResult((numberOne - numberTwo).toString())\r\n                break\r\n            case \"*\":\r\n                setResult((numberOne * numberTwo).toString())\r\n                break\r\n            case \"/\":\r\n                setResult((numberOne / numberTwo).toString())\r\n                break\r\n            default:\r\n                setResult(\"Error\")\r\n                break\r\n        }\r\n    }, [values.numberOne, values.numberTwo, values.operation])\r\n\r\n    return (\r\n        <main>\r\n            <Header/>\r\n            <Form handler={handleChange} operationValue={values.operation}/>\r\n            <Result result={result}/>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Calculator","import Calculator from \"./calculator/Calculator\";\n\nconst App = () => {\n    return (\n        Calculator()\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}